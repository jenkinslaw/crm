<?php
/**
 * @file
 * Code for the Person feature.
 */

include_once 'person.features.inc';
/**
 * @file
 * Code for the person feature.
 */

/**
 * Implements hook_views_pre_render().
 */
function person_views_pre_render(&$view) {
  $person = new Person();
  $person->viewsPreRender($view);
  return $view;
}

/**
 * Implements hook_views_query_alter().
 *
 * Alters view query with sortby info from form.
 */
function cdb_views_query_alter(&$view, &$query) {
  $person = new Person();
  $person->hookViewsQueryAlter($view);
  if ($view->name == "person_search") {
    cdb_views_add_sorts($view);
  }
}

/**
 * Combines multiple fields with the same structure.
 * @result is a view's result object
 * @fields is a simple array of the fields to combine. All fields will be merged
 * into the first listed field
 */
function _result_field_combine($result, $fields) {
  foreach ($fields as $field) {
    $field_values[] = $result->$field;
  }
  $result->$fields[0] = call_user_func_array('array_merge', $field_values);
  return $result;
}

/**
 * Implements hook_form_alter().
 */
function person_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'views_exposed_form' && $form['#action'] == '/person/multi-search') {
    $form['last_value']['#type'] = 'textarea';
  }
}
