<?php
/**
 * @file
 * Unit test for company.module functions.
 */

module_load_include('module', 'company');

class CompanyModuleTestCase extends DrupalWebTestCase {

  /**
   * Overrides parent::getInfo().
   */
  public static function getInfo() {
    return array(
      'name' => 'Company Module Unit Tests',
      'description' => 'Unit tests for functions within company.module',
      'group' => 'Jenkins',
    );
  }

  /**
   * Sets up tests.
   */
  public function setUp() {
    $this->setup = TRUE;
  }

  /**
   * Teardown tests.
   */
  public function tearDown() {
  }

  /**
   * Test company_views_query_alter().
   */
  public function testCompanyViewsQueryAlter() {
    $views = views_get_view('company_search');
    $views->set_display('page_1');
    $input = array(
      'company_name' => "test1\ntest2\ntest3",
      'sort_by' => 'company_name',
      'sort_order' => 'ASC',
    );
    $views->set_exposed_input($input);
    $views->execute();

    // Check that the condition type has been set to 'OR'.
    $actual = $views->query->where[0]['type'];
    $expected = 'OR';
    $this->assertEqual($actual, $expected, 'The where clause are added as OR statements.');

    // Check that multi names search query alter works as expected.
    $actual = $views->query->where[0]['conditions'];
    $expected = array(
      0 => array(
        'field' => 'company_name',
        'value' => '%test1%',
        'operator' => 'LIKE',
      ),
      1 => array(
        'field' => 'company_name',
        'value' => '%test2%',
        'operator' => 'LIKE',
      ),
      2 => array(
        'field' => 'company_name',
        'value' => '%test3%',
        'operator' => 'LIKE',
      ),
    );
    $this->assertEqual($actual, $expected,
      'The expected conditions are added to the company multi name s query.');
  }

  /**
   * Test company_form_alter() for multi_search_exposed form.
   */
  public function testCompanyMuiltiSearchFormAlter() {
    // Initialize the tests.
    $views = views_get_view('company_search');
    $views->set_display('page_1');
    $views->init_handlers();
    $views->execute();
    $form_state = array(
      'view' => $views,
      'display' => $views->display_handler->display,
      'exposed_form_plugin' => $views->display_handler->get_plugin('exposed_form'),
    );
    $form = drupal_build_form('views_exposed_form', $form_state);

    // Verify that the company_name is converted to a textarea.
    $actual = $form['company_name']['#type'];
    $expected = 'textarea';
    $this->assertEqual($actual, $expected,
      "The company_name field is changed to a text in the multi-name search form as expected.");

    // Verify that sort_by fields get duplicated.
    $actual = isset($form['sort_by_1']) && isset($form['sort_by_2']);
    $this->assertTrue($actual, "The multi-search-exposed form has it's sort_byfields duplicated.");
  }

  /**
   * Test company_views_query_alter().
   *
   * Tests that passing the view extra sort filter actually affects result
   * sorting for company multi_search.
   */
  public function testViewQueryAlter() {
    $two_sort = views_get_view('company_search');
    $two_sort->set_display('page_1');
    $two_sort->set_exposed_input(array(
      "company_name" => "test",
      "sort_by"                     => "company_name",
      "sort_order"                  => "ASC",
      "sort_by_1"                   => "billing_area_value",
      "sort_by_2"                   => "billing_area_value",
    ));
    $two_sort->pre_execute();
    $two_sort->execute();
    $orderby = $two_sort->query->orderby;
    $count = count($orderby);
    $this->assertEqual($count, 2,
      "The query sort attribute is the expected size : $count.");
  }
}
