<?php
/**
 * @file
 * Basic functional and Unit testing for Company Entity.
 */

class CompanyTestCase extends DrupalWebTestCase {

  private $company;

  function setUp() {
    $this->setup = TRUE;
    $this->company = new Company();
  }

  function tearDown() {
  }

  /**
   *  Initialize.
   */
  public static function getInfo() {
    return array(
      'name' => 'Company Entity tests.',
      'description' => 'Unit tests for Company entity.',
      'group' => 'Jenkins',
    );
  }

  /**
   * Verify mas90_name field assertions.
   */
  public function testMas90NameField() {
    $mas90_name = $this->company->getFieldInfo('mas90_name');

    $this->assertTrue(isset($mas90_name['bundles']['company']), "mas90_name is a company field.");
    $this->assertEqual($mas90_name['label'], 'Mas90 Name', "mas90_name label is 'Mas90 Name': $mas90_name[label].");
    $this->assertTrue($mas90_name['required'], "mas90_name is required.");
    $this->assertEqual($mas90_name['settings']['max_length'], 30, "mas90_name max_length is 30: $mas90_name[settings][max_length]");

  }

  /**
   * Verify suspended field assertions.
   */
  public function testSuspendedField() {
    $suspended = $this->company->getFieldInfo('suspended');
    $label = $suspended['label'];
    $required = $suspended['required'];
    $options = $this->company->suspended()->optionsList();

    $this->assertEqual($label, 'Suspended', "suspended label is 'Suspended': $suspended[label].");
    $this->assertTrue($required, "suspended is required.");

    $expected_options = array('Y' => 'Yes', 'N' => 'No', 'P' => 'Probation');
    $this->assertEqual($options, $expected_options, "The suspended options are as expected.");
  }



}
